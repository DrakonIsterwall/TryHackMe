1.Deploy

Deploy the Machine if u dont use your own OPENVPN connection start an Attack Box

2.Introduction

HTTP Service is mostly 80 and HTTPS 443,Windows Netbios 139 and SMB is 445.In CTFs it can be altered so try to enumerate the ports
0-65535(command is -p- so you dont miss maybe some important services.Well known ports are from 0-1024.

Answer:Ports,65535,1024

3.Nmap Switches

Use nmap -h to see all the options then you can answer the questions

Answers:-sS,-sU,-O,-sV,-v,-vv,-oA,-oN,-oG,-A,-T5,-p 80,-p 1000-1500,-p-,--script,--script=vuln

4.Scan Types: Overview

Shows you a overview of the scan types.

5.Scan Types: TCP Connect Scans

Well, as the name suggests, a TCP Connect scan works by performing the three-way handshake with each target port in turn. 
In other words, Nmap tries to connect to each specified TCP port, and determines whether the service is open by the response it 
receives.

In other words, if Nmap sends a TCP request with the SYN flag set to a closed port, the target server will respond with a TCP 
packet with the RST (Reset) flag set. By this response, Nmap can establish that the port is closed.
If, however, the request is sent to an open port, the target will respond with a TCP packet with the SYN/ACK flags set. Nmap 
then marks this port as being open (and completes the handshake by sending back a TCP packet with ACK set).

Many firewalls are configured to simply drop incoming packets. Nmap sends a TCP SYN request, and receives nothing back. This 
indicates that the port is being protected by a firewall and thus the port is considered to be filtered.

Answer:RFC 9293,RST

6.Scan Types: SYN Scans

This has a variety of advantages for us as hackers:

It can be used to bypass older Intrusion Detection systems as they are looking out for a full three way handshake. This is often 
no longer the case with modern IDS solutions; it is for this reason that SYN scans are still frequently referred to as 
"stealth" scans.
SYN scans are often not logged by applications listening on open ports, as standard practice is to log a connection once it's been
fully established. Again, this plays into the idea of SYN scans being stealthy.
Without having to bother about completing (and disconnecting from) a three-way handshake for every port, SYN scans are 
significantly faster than a standard TCP Connect scan.

There are, however, a couple of disadvantages to SYN scans, namely:

They require sudo permissions[1] in order to work correctly in Linux. This is because SYN scans require the ability to create raw 
packets (as opposed to the full TCP handshake), which is a privilege only the root user has by default.
Unstable services are sometimes brought down by SYN scans, which could prove problematic if a client has provided a production 
environment for the test.

Unstable services are sometimes brought down by SYN scans, which could prove problematic if a client has provided a production 
environment for the test.

For this reason, SYN scans are the default scans used by Nmap if run with sudo permissions. If run without sudo permissions, 
Nmap defaults to the TCP Connect scan we saw in the previous task.

Answer:Half-Open, Stealth,N

7.Scan Types: UDP Scans

UDP Scans are stateless they show us open|filtered.It can be open or filtered by firewall.If it gets a UDP response (which is 
very unusual), then the port is marked as open. More commonly there is no response, in which case the request is sent a second 
time as a double-check. If there is still no response then the port is marked open|filtered and Nmap moves on.

When a packet is sent to a closed UDP port, the target should respond with an ICMP (ping) packet containing a message that the 
port is unreachable. This clearly identifies closed ports, which Nmap marks as such and moves on.

Due to this difficulty in identifying whether a UDP port is actually open, UDP scans tend to be incredibly slow in comparison to 
the various TCP scans (in the region of 20 minutes to scan the first 1000 ports, with a good connection). For this reason it's 
usually good practice to run an Nmap scan with --top-ports <number> enabled. For example, scanning with  nmap -sU --top-ports 20 
<target>. Will scan the top 20 most commonly used UDP ports, resulting in a much more acceptable scan time.

When scanning UDP ports, Nmap usually sends completely empty requests -- just raw UDP packets. That said, for ports which are 
usually occupied by well-known services, it will instead send a protocol-specific payload which is more likely to elicit a 
response from which a more accurate result can be drawn.

Answers:open|filtered,ICMP

8.Scan Types: NULL,FIN and Xmas

NULL, FIN and Xmas TCP port scans are less commonly used than any of the others and they tend to be more stealthy.
In this case i learned it can be tricky to use this scans,you can get all closed when you use malformed packets.
By sending requests which do not contain the SYN flag, we effectively bypass this kind of firewall. Whilst this is good in 
theory, most modern IDS solutions are savvy to these scan types, so don't rely on them to be 100% effective when dealing with 
modern systems.

Answer:xmas,Firewall Evasion,Microsoft Windows

9.Scan Types: ICMP Networking Scanning

scan the network we are moving in:

nmap -sn 192.168.0.1-254
or
nmap -sn 192.168.0.0/24

In addition to the ICMP echo requests, the -sn switch will also cause nmap to send a TCP SYN packet to port 443 of the target,
as well as a TCP ACK (or TCP SYN if not run as root) packet to port 80 of the target.

Answer:nmap -sn 172.16.0.0/16

10.NSE Scripts: Overview

More infos on NSE worth reading
https://nmap.org/book/nse-usage.html

There are many categories available. Some useful categories include:

    safe:- Won't affect the target
    intrusive:- Not safe: likely to affect the target
    vuln:- Scan for vulnerabilities
    exploit:- Attempt to exploit a vulnerability
    auth:- Attempt to bypass authentication for running services (e.g. Log into an FTP server anonymously)
    brute:- Attempt to bruteforce credentials for running services
    discovery:- Attempt to query running services for further information about the network (e.g. query an SNMP server).

Answer:Lua,intrusive

11.NSE Scripts: Working with the NSE

In Task 3 we looked very briefly at the --script switch for activating NSE scripts from the vuln category using --script=vuln. 
It should come as no surprise that the other categories work in exactly the same way. 
If the command --script=safe is run, then any applicable safe scripts will be run against the target 
(Note: only scripts which target an active service will be activated).
To run a specific script, we would use --script=<script-name> , e.g. --script=http-fileupload-exploiter.
Multiple scripts can be run simultaneously in this fashion by separating them by a comma. 
For example: --script=smb-enum-users,smb-enum-shares.
Some scripts require arguments (for example, credentials, if they're exploiting an authenticated vulnerability). 
These can be given with the --script-args Nmap switch. An example of this would be with the http-put script 
(used to upload files using the PUT method). This takes two arguments: the URL to upload the file to, and the file's location 
on disk.  For example:
nmap -p 80 --script http-put --script-args http-put.url='/dav/shell.php',http-put.file='./shell.php'
Note that the arguments are separated by commas, and connected to the corresponding script with periods 
(i.e.  <script-name>.<argument>).

https://nmap.org/nsedoc/

nmap --script-help <script-name>
add the ftp-anon then open the link shown
https://nmap.org/nsedoc/scripts/ftp-anon.html
and lookup which option you can add

Answer:maxlist

12.NSE Scripts: Searching for Scripts

Use https://nmap.org/nsedoc/ to find what you need or look in the path /usr/share/nmap/scripts.

In the terminal you can use ls -l /usr/share/nmap/scripts/*ftp* (in this case ftp as example) to search for something specific.
Search for categories grep "safe" /usr/share/nmap/scripts/script.db

If not installed or for updating
sudo apt update && sudo apt install nmap

Answer:smb-os-discovery.nse,smb-brute

13.Firewall Evasion

Your typical Windows host will, with its default firewall, block all ICMP packets. This presents a problem: not only do we often
use ping to manually establish the activity of a target, Nmap does the same thing by default. This means that Nmap will register
a host with this firewall configuration as dead and not bother scanning it at all.
So, we need a way to get around this configuration. Fortunately Nmap provides an option for this: -Pn, which tells Nmap to not 
bother pinging the host before scanning it. This means that Nmap will always treat the target host(s) as being alive, effectively
bypassing the ICMP block; however, it comes at the price of potentially taking a very long time to complete the scan (if the host
really is dead then Nmap will still be checking and double checking every specified port).
It's worth noting that if you're already directly on the local network, Nmap can also use ARP requests to determine host activity. 

https://nmap.org/book/man-bypass-firewalls-ids.html

The following switches are of particular note:

-f:- Used to fragment the packets (i.e. split them into smaller pieces) making it less likely that the packets will be detected 
by a firewall or IDS.
An alternative to -f, but providing more control over the size of the packets: --mtu <number>, accepts a maximum transmission 
unit size to use for the packets sent. This must be a multiple of 8.
--scan-delay <time>ms:- used to add a delay between packets sent. This is very useful if the network is unstable, but also for 
evading any time-based firewall/IDS triggers which may be in place.
--badsum:- this is used to generate in invalid checksum for packets. Any real TCP/IP stack would drop this packet, however, 
firewalls may potentially respond automatically, without bothering to check the checksum of the packet. As such, this switch can
be used to determine the presence of a firewall/IDS.

Google the second question.
Answer:ICMP,--data-length

14.Practical

With a normal ping we check if the deployed machine sends a ICMP back. (No it does not)
ping x.x.x.x 

We look up xmas scan https://nmap.org/book/scan-methods-null-fin-xmas-scan.html
sudo nmap x.x.x.x -sX -p 0-999 -vv -Pn

-vv adds higher verbose and -p 0-999 checks the first 1000 ports 
-Pn, which tells Nmap to not bother pinging the host before scanning it. This means that Nmap will always treat the target 
host(s) as being alive, effectively bypassing the ICMP block; however, it comes at the price of potentially taking a very long 
time to complete the scan (if the host really is dead then Nmap will still be checking and double checking every specified port). 

My result with the nmap scan above
All 1000 scanned ports on x.x.x.x are in ignored states.
Not shown: 1000 open|filtered tcp ports (no-response)

For the next question we use the following command to make a TCP SYN Scan
sudo nmap x.x.x.x -sS -p 0-5000 -vv -Pn

Result is the following

Discovered open port 3389/tcp on x.x.x.x
Discovered open port 135/tcp on x.x.x.x
Discovered open port 80/tcp on x.x.x.x
Discovered open port 21/tcp on x.x.x.x
Discovered open port 53/tcp on x.x.x.x

It took 659 Seconds to scan so nearly 11 minutes.

Nmap scan report for x.x.x.x
Host is up, received user-set (0.057s latency).
Scanned at 2024-xx-xx 22:58:19 CEST for 659s
Not shown: 4996 filtered tcp ports (no-response)
PORT     STATE SERVICE       REASON
21/tcp   open  ftp           syn-ack ttl 127
53/tcp   open  domain        syn-ack ttl 127
80/tcp   open  http          syn-ack ttl 127
135/tcp  open  msrpc         syn-ack ttl 127
3389/tcp open  ms-wbt-server syn-ack ttl 127

For the last question we have to have to do a bit the Wireshark Room (i gonna add it soon), if u wanna skip that for now u can
try Y or N (its Y)

Answer:N,999,no-response,5,Y

15.Conclusion

Use it as a reference to get to know nmap better. It is a lot but we dont need everything from the beginning.
Remember that -Pn and -vv can help a lot already to scan targets.
https://nmap.org/book/
